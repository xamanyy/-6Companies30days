  int helper(int pos,string str,int n, vector<int> &dp)
    {
        if(pos >= n) return 1;
        
        if (dp[pos] != -1) return dp[pos];
        
        int op1 = 0,op2 =0;
        
        // if(op1 < 0)
        op1 = str[pos] - '0';
        
        if(pos < n-1)
        {
            op2 = op1 *10 + (str[pos+1] - '0');
        }
        
        int ans = 0;
        if(op1 > 0) ans += helper(pos+1,str,n,dp);
        if(op1>0 && op2 > 0 && op2 <= 26) ans+= helper(pos+2,str,n,dp);
        
        
        return dp[pos] = ans % 1000000007;
    }
    
	public:
		int CountWays(string str){
		   
		    
		    int pos = 0;
		    int n = str.length();
		    vector<int> dp(n+1,-1);
		    
		    return helper(pos,str,n,dp) % 1000000007;
		}
